# Alignment script. Sets the reference genome and genome ID based on the input
# arguments (default human, MboI). Optional arguments are the queue for the
# alignment (default short), description for stats file,
# using the short read aligner, read end (to align one read end using short
# read aligner), stage to relaunch at, paths to various files if needed,
# chunk size, path to scripts directory, and the top-level directory (default
# current directory). In lieu of setting the genome ID, you can instead set the
# reference sequence and the chrom.sizes file path, but the directory
# containing the reference sequence must also contain the BWA index files.
#
# Splits the fastq files, creates jobs to align them, creates merge jobs that
# wait for the alignment to finish, and creates a final merge job.
#
# Also creates "cleanup" jobs that at each stage, deletes jobs off the cluster
# if any one of them fails.
#
# If all is successful, takes the final merged file, removes name duplicates,
# removes PCR duplicates, and creates the hic job and stats job.  Final
# product will be hic file and stats file in the aligned directory.
#
# [topDir]/fastq  - Should contain the fastq files. This code assumes that
#                   there is an "R" in the appropriate files, i.e. *R*.fastq
# From the top-level directory, the following two directories are created:
#
# [topDir]/splits  - Where to write the scratch split files (fastq files and
#                    intermediate SAM files). This can be deleted after
#                    execution.
# [topDir]/aligned - Where to write the final output files.
#
# The following globals should be set correctly before proceeding:
#
# splitsize - The number of lines that each split fastq should contain. Larger
#             means fewer files and longer overall, but too small means there
#             are so many jobs that the cluster won't run them. This can be
#             set with the -C command as well
# read1str  - portion of fastq filename that indicates this is the "read 1"
#             file; used to loop over only the read 1 and within that loop,
#             also align read 2 and merge.  If this is not set correctly,
#             script will not work. The error will often manifest itself
#             through a "*" in the name because the wildcard was not able to
#             match any files with the read1str.
#############################################################################
###### Directory DETAILS
#[topDir] is the top level directory (default\n  \"$topDir\")
topDir=/home/CAM/aromd/JuicerTest/
#[Juicer scripts directory]: set the Juicer directory, which should have scripts references
juiceDir="/home/CAM/aromd/software/juicer2/SLURM/"
#####--------------------------------------------######


###### EXPERIMENT SPECIFIC DETAILS
# Experiment Description if any, be brief
about="hg19_test"
#[account name]: user account name on cluster
user="aromd"
#####--------------------------------------------######


#####  FASTQ FILE DETAILS #####
# fastq files should look like filename_R1.fastq and filename_R2.fastq
# if your fastq files look different, change this value
read1str="_R1"
read2str="_R2"
# size to split fastqs. adjust to match your needs. 4000000=1M reads per split
# can also be changed via the -C flag, here the chunks are set to 25million reads.
splitsize=45000000
# 0: Donot split the file, 1: Split the fastq file in chunks specified by  splitsize parameter
splitme=1
#####--------------------------------------------######


#####  reRUN of failed run DETAILS #####
# [stage]: must be one of \"merge\", \"dedup\", \"final\", \"postproc\", or \"early\".
# -Use ""    Running from start .
# -Use "merge" when alignment has finished but the merged_sort file has not yet been created.
# -Use "dedup" when the files have been merged into merged_sort but merged_nodups has not yet been created.
# -Use "final" when the reads have been deduped into merged_nodups but the final stats and hic files have not yet been created.
# -Use "postproc" when the hic files have been created and only postprocessing feature annotation remains to be completed.
# -Use "early" for an early exit, before the final creation of the stats and hic files"
stage=""
# Depending on the stage set the value of stage to 1
merge=
dedup=
earlyexit=
final=
postproc=
#####--------------------------------------------######


#####  Restriction Site Specific Details #####
# restriction enzyme
site="MboI"
# [restriction site file]: enter path for restriction site file (locations of
# restriction sites in genome; can be generated with the script  misc/generate_site_positions.py)
site_file=path/to/site/restrictionEnzymefile
#[ligation junction]: use this string when counting ligation junctions
# leave it empty "" ; if Restrictiom enzymes used is one of the listed. list: HindIII, DpnII, MseI, MboI, NcoI, MboI+HindIII,Arima
# If enzyme is not listed, set a ligation pattern, example for HindIII the ligation pattern is "AAGCTAGCTT".
# HindIII ligation="AAGCTAGCTT"
# MseI  ligation="TTATAA"
# DpnII ligation="GATCGATC"
# MboI ligation="GATCGATC"
# NcoI ligation="CCATGCATGG"
# MboI+HindIII ligation="'(GATCGATC|AAGCTAGCTT)'"
# Arima) ligation="'(GAATAATC|GAATACTC|GAATAGTC|GAATATTC|GAATGATC|GACTAATC|GACTACTC|GACTAGTC|GACTATTC|GACTGATC|GAGTAATC|GAGTACTC|GAGTAGTC|GAGTATTC|GAGTGATC|GATCAATC|GATCACTC|GATCAGTC|GATCATTC|GATCGATC|GATTAATC|GATTACTC|GATTAGTC|GATTATTC|GATTGATC)'"
ligation="GATCGATC"
#####--------------------------------------------######


#####  Reference genome Specific Details #####
# genome ID, default to human, can also be set in options
genomeID="hg19"
genomePath=/home/CAM/aromd/software/juicer2/SLURM/references/hg19.chrom.sizes
###  BWA iNDEX SHOULD BE IN refseq Dir ### VeryImportant
refSeq="${juiceDir}/references/hg19.fasta"  # same directory should have BWA index.
# normally both read ends are aligned with long read aligner;
# if one end is short, this is set
#####--------------------------------------------######

#####  Cluster Specific Details #####
#[queue] is the queue for running alignments .
queue="general"
qos="general"
#[threads]: number of threads when running BWA alignment
threads=8
alloc_mem=50000
#####--------------------------------------------######


#####  Other Parameters ####
# use wobble for dedupping by default (not just exact matches)
shortread=1  #use short read aligner
# normally both read ends are aligned with long read aligner;
# if one end is short, this is set
## If short read end is set, make sure it is 1 or 2, otherwise leave it to 0
shortreadend=0
# do not include fragment delimited maps by default
# If DNAse-type experiment, no fragment maps. set nofrag to 1
nofrag=0
# use wobble for dedupping by default (not just exact matches)
justexact=0
#####--------------------------------------------######


##### Packages to be loaded ####
module load bwa/0.7.17
module load java-sdk/1.8.0_92
juicer_version="1.5.7"

#####--------------------------------------------######


#______________________________________________#
###   DONOT EDIT ANYTHING BELOW THIS LINE  #####
#______________________________________________#

## Directories to be created and regex strings for listing files
splitdir=${topDir}"/splits"
donesplitdir=$topDir"/done_splits"
# Creates fastqdir variable holding path to all fastq files.
fastqdir=${topDir}"/fastq/*_R*.fastq*"
outputdir=${topDir}"/aligned"
tmpdir=${topDir}"/HIC_tmp"
debugdir=${topDir}"/debug"
